import streamlit as st
from ultralytics import YOLO
import cv2
import numpy as np
from PIL import Image

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•
model = YOLO("model.pt")  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô path ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á

st.title("ü™ô ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û")

# ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û
uploaded_file = st.file_uploader("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    # ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û
    image = Image.open(uploaded_file)
    st.image(image, caption='‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î', use_column_width=True)

    # ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏•
    with st.spinner("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•..."):
        image_np = np.array(image)
        results = model(image_np)[0]  # ‡∏£‡∏±‡∏ô YOLO
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        boxes = results.boxes
        class_ids = boxes.cls.cpu().numpy()
        
        # ‡∏ô‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤
        coin_count = len(class_ids)
        value_map = {
            0: 1,  # 1 ‡∏ö‡∏≤‡∏ó
            1: 2,  # 2 ‡∏ö‡∏≤‡∏ó
            2: 5,
            3: 10
        }
        total_value = sum([value_map.get(int(c), 0) for c in class_ids])
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        st.success(f"üî¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö {coin_count} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç")
        st.success(f"üí∞ ‡∏£‡∏ß‡∏°‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤: {total_value} ‡∏ö‡∏≤‡∏ó")

        # ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
        for coin_class, count in zip(*np.unique(class_ids, return_counts=True)):
            st.write(f"‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç {value_map.get(int(coin_class), '?')} ‡∏ö‡∏≤‡∏ó: {count} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç")
